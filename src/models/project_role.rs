/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

/// ProjectRole : Details about the roles in a project.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ProjectRole {
    /// The URL the project role details.
    #[serde(rename = "self", skip_serializing_if = "Option::is_none")]
    pub param_self: Option<String>,
    /// The name of the project role.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The ID of the project role.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    /// The description of the project role.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The list of users who act in this role.
    #[serde(rename = "actors", skip_serializing_if = "Option::is_none")]
    pub actors: Option<Vec<crate::models::RoleActor>>,
    #[serde(rename = "scope", skip_serializing_if = "Option::is_none")]
    pub scope: Option<Box<crate::models::ProjectRoleScope>>,
    /// The translated name of the project role.
    #[serde(rename = "translatedName", skip_serializing_if = "Option::is_none")]
    pub translated_name: Option<String>,
    /// Whether the calling user is part of this role.
    #[serde(rename = "currentUserRole", skip_serializing_if = "Option::is_none")]
    pub current_user_role: Option<bool>,
    /// Whether this role is the default role for the project
    #[serde(rename = "default", skip_serializing_if = "Option::is_none")]
    pub default: Option<bool>,
    /// Whether the roles are configurable for this project.
    #[serde(rename = "roleConfigurable", skip_serializing_if = "Option::is_none")]
    pub role_configurable: Option<bool>,
    /// Whether this role is the admin role for the project.
    #[serde(rename = "admin", skip_serializing_if = "Option::is_none")]
    pub admin: Option<bool>,
}

impl ProjectRole {
    /// Details about the roles in a project.
    pub fn new() -> ProjectRole {
        ProjectRole {
            param_self: None,
            name: None,
            id: None,
            description: None,
            actors: None,
            scope: None,
            translated_name: None,
            current_user_role: None,
            default: None,
            role_configurable: None,
            admin: None,
        }
    }
}
